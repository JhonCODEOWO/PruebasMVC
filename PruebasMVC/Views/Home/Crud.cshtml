
@{
    ViewBag.Title = "Crud";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Panel de administración</h1>

<button class='btn btn-success btnEditar' data-bs-toggle='modal' data-bs-target='#nuevoModal'> Añadir nuevo registro </button>

@*<form id="formulario">
    <div class="mb-3">
        <label for="nombre">Nombre de usuario:</label>
        <input type="text" id="nombre" name="nombre" />
    </div>

    <div class="mb-3">
        <label for="apellidos">Apellidos</label>
        <input type="text" id="apellidos" name="apellidos" />
    </div>

    <div class="mb-3">
        <label for="edad">Edad</label>
        <input type="number" id="edad" name="edad" />
    </div>

    <div class="mb-3">
        <label for="fecha">Fecha de registro:</label>
        <input type="date" id="fecha" name="fecha" />
    </div>

    <button type="submit" class="btn btn-success"> Envíar datos </button>
</form>*@


<table class="table table-dark mt-4" id="tabla">
    <thead>
        <tr class="text-lg-center">
            <th>ID</th>
            <th>Nombre</th>
            <th>Apellidos</th>
            <th>Edad</th>
            <th>Fecha de registro</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody id="tablaBody" class="text-lg-center">
    </tbody>
</table>

@* Modal para el botón generado de modificación, cuando se haga click en el botón se cargaran los datos en los input *@
<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Modificando elemento</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="formEditando" class="d-flex flex-column">
                    <label for="">Id</label>
                    <input type="text" name="idEditando" id="idEditando" />
                    <label for="">Nombre</label>
                    <input type="text" name="nombreEditando" id="nombreEditando" />
                    <label for="">Apellidos</label>
                    <input type="text" name="apellidosEditando" id="apellidosEditando" />
                    <label for="">Edad</label>
                    <input type="number" name="edadEditando" id="edadEditando" />
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"> Cerrar </button>
                        <button type="submit" class="btn btn-primary"> Guardar cambios</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal añadir nuevo -->
<div class="modal fade" id="nuevoModal" tabindex="-1" aria-labelledby="nuevoModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Añadiendo nuevo elemento</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="formulario" class="d-flex flex-column">
                    <label for="nombre">Nombre de usuario:</label>
                    <input type="text" id="nombre" name="nombre" />

                    <label for="apellidos">Apellidos</label>
                    <input type="text" id="apellidos" name="apellidos" />

                    <label for="edad">Edad</label>
                    <input type="number" id="edad" name="edad" />

                    <label for="fecha">Fecha de registro:</label>
                    <input type="date" id="fecha" name="fecha" />
                    
                    <div class="d-flex justify-content-end mt-3">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="closeModal"> Cerrar </button>
                        <button type="submit" class="btn btn-success"> Envíar datos </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>




@section scripts{
    <script>
        //Cuando se carga el dom
        $(document).ready(function () {
            //Carga de funciones
            cargarDatos();
            //console.log(obtenerUsuario(1));

            //cuando el formulario hace un evento submit
            $('#formulario').submit(function (event) {
                //prevenimos su acción por defecto
                event.preventDefault();
                //Llenamos un arreglo asociativo con los valores de la clase que se va a llenar
                var usuario = {
                    nombre: $('#nombre').val(),
                    apellidos: $('#apellidos').val(),
                    edad: $('#edad').val(),
                    fecharegistro: $('#fecha').val()
                };

                //Hacemos la petición ajax en donde url corresponde al elemento que ejecutará la petición y data los datos a envíar
                $.ajax({
                    url: '@Url.Action("usrAdd", "Home")',
                    type: "POST",
                    contentType: 'application/json',
                    data: JSON.stringify({ usuario: usuario }),
                    success: function (response) {
                        if (response.succes) {
                            limpiarEntradas();
                            cargarDatos();
                            $('#closeModal').trigger('click');
                            //alert(response.message);
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function (error) {
                        console.log(error);
                        alert("Error al realizar la petición");
                    }

                });
                cargarDatos();
            });

            $('#formEditando').submit(function (event) {
                event.preventDefault();
                console.log("En submit");

                var usuario = {
                    id: $('#idEditando').val(),
                    nombre: $('#nombreEditando').val(),
                    apellidos: $('#apellidosEditando').val(),
                    edad: $('#edadEditando').val()
                }

                $.ajax({
                    url: '@Url.Action("actualizarUsuario", "Home")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ usuario: usuario }),
                    success: function (response) {
                        if (response.success) {
                            cargarDatos();
                        } else {
                            alert("La petición ha tenido un error del lado del controlador");
                        }
                    },
                    error: function (error) {
                        alert("Ha ocurrido un error en la petición ajax");
                    }
                })
            })



            function cargarTabla(arreglo) {
                //Limpiamos el body de la tabla
                $('#tablaBody').empty();

                //Recorrer datos y agregar filas a la tabla cuando no se tienen datos el bucle for no se ejecuta
                for (var clave in arreglo) {
                    //Verificamos si el arreglo contiene alguna propiedad dentro de ella
                    if (arreglo.hasOwnProperty(clave)) {
                        //Creamos la fila
                        var fila = $('<tr></tr>');
                        //El dato a tratar ahora se convierte en la clave en la que está ubicada del arreglo asociativo
                        var objetoDatos = arreglo[clave];
                        //console.log(objetoDatos);
                        //Recorremos ahora los elementos del objeto actual, ahora si se crean las columnas de cada elemento

                        for (var propiedad in objetoDatos) {
                            //Verificamos si el objeto datos coincide con su propiedad
                            if (objetoDatos.hasOwnProperty(propiedad)) {
                                //console.log(objetoDatos[propiedad]);
                                //Generamos la celda en código html
                                var celda = $("<td></td>");
                                celda.text(objetoDatos[propiedad]);
                                fila.append(celda);
                            }
                        }
                        var celda = $("<td class='d-flex flex-column'></td>");
                        //Creamos el botón con el valor del id del objeto asociativo por keys de strings
                        var botonModificar = $("<button class='btn btn-success btnEditar' data-bs-toggle='modal' data-bs-target='#exampleModal'> Modificar registro </button>").attr('value', objetoDatos['id']);
                        var botonEliminar = $("<button class='btn btn-warning mt-4 btnEliminar' type='submit'> Eliminar </button>").attr('value', objetoDatos['id']);
                        //añadir elementos al elemento que contiene el append
                        celda.append(botonModificar);
                        celda.append(botonEliminar);
                        fila.append(celda);
                        $('#tablaBody').append(fila);
                    }
                }
            }

            function cargarDatos() {
            var usuarios;
            $.ajax({
                url: '@Url.Action("mostrarUsuarios", "Home")',
                type: "GET",
                dataType: "json",
                success: function (response) {
                    if (response.success) {
                        usuarios = response.data;
                        cargarTabla(usuarios);
                        //console.log(usuarios);
                    } else {
                        console.log("Ha ocurrido un error al intentar recibir una respuesta");
                    }
                },
                error: function (error) {
                    alert("Error al realizar la petición, verifica tus datos de petición");
                }
            });
            return usuarios;
            }
        });

        function limpiarEntradas() {
            $('#nombre').val('');
            $('#apellidos').val('');
            $('#edad').val('');
            //$('#nombre').val('');
        }

        function obtenerUsuario(id) {
            return new Promise(function (resolve, reject) {
                $.ajax({
                    url: '@Url.Action("obtenerUsuario", "Home")',
                    type: 'GET',
                    data: { id: id },
                    success: function (response) {
                        if (response.success) {
                            var usuario = response.data;
                            resolve(usuario);
                        } else {
                            reject("No se ha recibido una respuesta exitosa");
                        }
                    }
                })
            })
        }

        function eliminarUsuario(id) {
            $.ajax({
                url: '@Url.Action("eliminarUsuario", "Home")',
                type: 'POST',
                data: { id: id },
                success: function (response) {
                    if (response.success) {
                        cargarDatos();
                    } else {
                        alert("Error en la petición desde parte del controlador");
                    }
                },
                error: function (error) {
                    alert("Error al ejecutar la petición ajax");
                }

            })
        }

        //function modificarUsuario() {
        //    var id = $('.btnEditar').val();
        //    var usuario = obtenerUsuario(id);
        //    console.log(id);
        //    console.log(usuario);
        //}
        $(document).on('click', '.btnEliminar', function () {
            var id = $(this).val();
            eliminarUsuario(id);
        });

        //Para cuando existen mas de 1 elemento al que queremos hacer click y realizar acciones dependiendo de cada uno
        $(document).on('click', '.btnEditar', function () {
            var id = $(this).val();
            var usuarioObtenido;
            var nombre, apellidos, edad;

            //Para funciones ajax promises se debe usar then y catch
            obtenerUsuario(id)
                //Entre los parentesis se coloca el dato a recibir con el cual trabajaremos
                .then(function (usuario) {
                    usuarioObtenido = usuario;
                    console.log(usuarioObtenido);
                    //Guardamos los valores en variables individuales
                    nombre = usuarioObtenido[0]['nombre'];
                    apellidos = usuarioObtenido[0]['apellidos'];
                    edad = usuarioObtenido[0]['edad'];
                    //Mandamos ahora los valores a los input del formulario
                    $('#idEditando').val(id);
                    $('#nombreEditando').val(nombre);
                    $('#apellidosEditando').val(apellidos);
                    $('#edadEditando').val(edad);
                })
                .catch(function (error) {
                    console.log(error);
                })
        })
    </script>
}